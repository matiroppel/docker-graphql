name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    # steps:
    # - name: Checkout code 
    #   uses: actions/checkout@v4
    #   with:
    #     fetch-depth: 0

    # - name: Git Semantic Version
    #   uses: paulhatch/semantic-version@v4.0.3
    #   with:
    #     # major (breaking) change, supports regular expressions wrapped with '/'
    #     major_pattern: "mayor:"
    #     # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
    #     minor_pattern: "feat"
    #     # A string to determine the format of the version output
    #     format: "${major}.${minor}.${patch}-prerelease${increment}"
    #   id: version
      
    # - name: Docker Login
    #   env:
    #     DOCKER_USER: ${{ secrets.DOCKER_USER }}
    #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #   run: |
    #     echo "Iniciando Login"
    #     docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    #     echo "Fin Login"
        
    # - name: Build Docker Image
    #   env:
    #     NEW_VERSION: ${{ steps.version.outputs.version }}
    #   run: |
    #      docker build -t matiroppel88/docker-graphql:$NEW_VERSION .
    #      docker build -t matiroppel88/docker-graphql .
    #       echo "New version: $NEW_VERSION !!!"

    # - name: Push Docker Image
    #   env:
    #     NEW_VERSION: ${{ steps.version.outputs.version }}
    #   run: |
    #      docker push matiroppel88/docker-graphql:$NEW_VERSION
    #      docker push matiroppel88/docker-graphql
    #       echo "New version: $NEW_VERSION !!!"
